[project]
name = "AIcarus"
version = "0.0.1"
description = "为时已晚有机体！"

[tool.ruff]
# 这是一个全局设置，lint 和 format 都会参考
# 设置目标 Python 版本为 3.12
# Ruff 会基于此版本来启用/禁用特定规则或检查语法
target-version = "py312"
line-length = 120

[tool.ruff.lint]
fixable = ["ALL"]
# 选择要启用的规则集。这是一个比较全面的推荐起点：
# E: pycodestyle 的错误 (基础代码风格错误)
# W: pycodestyle 的警告 (建议性的代码风格问题，可以酌情忽略某些)
# F: Pyflakes 的检查 (未使用的导入、未定义的变量等逻辑错误)
# I: isort 兼容的导入排序规则
# N: pep8-naming (命名规范检查，如变量名、函数名风格)
# UP: pyupgrade (代码现代化建议，比如使用 Python 3.12 的新特性)
# ANN: flake8-annotations (类型注解相关的检查)
# RUF: Ruff 特有的有用规则
# B: flake8-bugbear (查找可能的 bug 或设计问题)
# C4: flake8-comprehensions (不必要的列表/字典/集合推导式优化)
# SIM: flake8-simplify (简化代码的建议)
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # Pyflakes
    "I",  # isort
    "N",  # pep8-naming
    "UP", # pyupgrade
    "ANN",# flake8-annotations
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "SIM",# flake8-simplify
]

# (可选) 忽略特定的规则。
# 例如，如果 Ruff 的 formatter 会处理行长，你可以忽略 E501。
# 或者某些规则你暂时不想遵守。
ignore = ["E711","E501"]
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
docstring-code-format = true
indent-style = "space"


# 使用双引号表示字符串
quote-style = "double"

# 尊重魔法尾随逗号
# 例如：
# items = [
#     "apple",
#     "banana",
#     "cherry",
# ]
skip-magic-trailing-comma = false

# 自动检测合适的换行符
line-ending = "auto"